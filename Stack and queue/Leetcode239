import collections


def maxSlidingWindow(nums, k):
    n = len(nums)
    q = collections.deque()
    # 首先遍历前k个值
    for i in range(k):
        # 当队列q不为空，如果加入值大于上一个值，将对应下标pop，反之将下标添加到q中
        # 让最大的占据队首，直到超出k的范围，弹出
        while q and nums[i] >= nums[q[-1]]:
            q.pop()
        q.append(i)

    ans = [nums[q[0]]]  # 得到前k个值的最大值
    # 从k向后进行遍历
    for i in range(k, n):
        # 相同道理
        while q and nums[i] >= nums[q[-1]]:
            q.pop()
        q.append(i)
        # 当超出滑动窗口时，进行popleft()
        while q[0] <= i - k:
            q.popleft()
        # 将每一次比较的最大值加入到ans中
        ans.append(nums[q[0]])

    return ans


nums = [1, 3, -1, 2, 5, 3, 2, 1, 2]
k = 4
print(maxSlidingWindow(nums, k))
