class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next


def delete_n(head, n):
    dummy = ListNode()
    pre = dummy
    pre.next = head
    cur = head
    count = 0
    if not cur.next:
        return head
    while count < n-1:
        cur = cur.next
        pre = pre.next
        count += 1
    pre.next = pre.next.next
    return dummy.next



# 读取结点
def get_nodes(arr):
    head0 = ListNode()
    head_fixed = head0
    for i in range(len(arr)):
        new_node = ListNode(arr[i])
        head0.next = new_node
        head0 = head0.next
    return head_fixed.next  # 得到新链表的头节点


# 保存新链表为list
def save_new_nodes(new_head):
    arr_new = []
    while new_head:
        arr_new.append(new_head.val)
        new_head = new_head.next
# 打印
    print(arr_new)


if __name__ == "__main__":
    # 主函数输入列表
    arr = [0, 2, 3, 4, 5]
    # 得到头节点
    headNode = get_nodes(arr)
    # 删除第n个
    head_new = delete_n(headNode, 5)
    # 进行保存
    save_new_nodes(head_new)
