class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next


def middle(head):
    slow = fast = head
    while fast and fast.next:
        slow = slow.next
        fast = fast.next.next
    return slow

def reverseList(head_new):
    prev = None
    cur = head_new
    while cur:
        nxt = cur.next
        cur.next = prev
        prev = cur
        cur = nxt
    return prev



# 读取结点
def get_nodes(arr):
    head0 = ListNode()
    head_fixed = head0
    for i in range(len(arr)):
        new_node = ListNode(arr[i])
        head0.next = new_node
        head0 = head0.next
    return head_fixed.next  # 得到新链表的头节点

# 保存新链表为list
def save_new_nodes(new_head):
    arr_new = []
    while new_head:
        arr_new.append(new_head.val)
        new_head = new_head.next
# 打印
    print(arr_new)


if __name__ == "__main__":
    # 主函数输入列表
    arr1 = [1, 2, 3, 5, 4]
    # 得到头节点
    headNode1 = get_nodes(arr1)
    # 反转
    head_new = middle(headNode1)
    # 进行保存
    new = reverseList(head_new)
    save_new_nodes(new)
