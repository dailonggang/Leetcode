class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next


def reverseBetween(head, left, right):
    pre = ListNode()
    print(pre.val)
    print(pre.next)
    cur = head
    for i in range(left-1):
        pre = cur
        cur = cur.next
    pre2 = pre
    print(pre.next)
    cur2 = cur
    for i in range(left, right+1):
        nxt = cur.next
        cur.next = pre
        pre = cur
        print(pre.next)
        cur = nxt

    if pre2.val != 0:
        pre2.next = pre

    else:
        head = pre

    cur2.next = cur

    return head


# 读取结点
def get_nodes(arr):
    head0 = ListNode()
    head_fixed = head0
    for i in range(len(arr)):
        new_node = ListNode(arr[i])
        head0.next = new_node
        head0 = head0.next
    return head_fixed.next  # 得到新链表的头节点


# 保存新链表为list
def save_new_nodes(new_head):
    arr_new = []
    while new_head:
        arr_new.append(new_head.val)
        new_head = new_head.next
# 打印
    print(arr_new)


if __name__ == "__main__":
    # 主函数输入列表
    arr = [0, 2, 3, 4, 5]
    # 得到头节点
    headNode = get_nodes(arr)
    # 反转
    head_new = reverseBetween(headNode, 1, 3)
    # 进行保存
    save_new_nodes(head_new)
