# 反转后整数超过 32 位的有符号整数的范围 [−2**31,  2**31 − 1] ，就返回 0。

def reverse(x):
    INT_MIN, INT_MAX = -2 ** 31, 2 ** 31 - 1  # INT_MIN=−2**31, INT_MAX = 2 ** 31 - 1

    rev = 0 # 定义变量赋初值
    while x != 0:
        # INT_MIN 也是一个负数，不能写成 rev < INT_MIN // 10， python中负数整除需要加1
        # 在最后一位还未插入前进行比较,如果符合下面条件则返回0
        if rev < INT_MIN // 10 + 1 or rev > INT_MAX // 10:
            return 0
        digit = x % 10 
        # Python3 的取模运算在 x 为负数时也会返回 [0, 9) 以内的结果，因此这里需要进行特殊判断
        if x < 0 and digit > 0:
            digit -= 10
            print(digit)

        # 同理，Python3 的整数除法在 x 为负数时会向下（更小的负数）取整，因此不能写成 x //= 10
        x = (x - digit) // 10
        print(x)
        rev = rev * 10 + digit
        print(rev)

    return rev


turn = reverse(564589642)

print(turn)
